services:
  # Служба для PostgreSQL
  postgres-bitrosh:
    image: postgres:17
    container_name: postgres-bitrosh
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: bitrosh
      POSTGRES_USER: bitrosh
      POSTGRES_PASSWORD: bitrosh
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U bitrosh -d bitrosh" ]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # Порт для доступа к MinIO
      - "9001:9001"  # Порт для консоли управления MinIO
    command: server /data --console-address ":9001"

  app:
    image: bitrosh-backend
    build:
      context: .
      dockerfile: src/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-bitrosh:5432/bitrosh
      SPRING_DATASOURCE_USERNAME: bitrosh
      SPRING_DATASOURCE_PASSWORD: bitrosh
      MINIO_URL: http://minio:9000  # URL MinIO
      MINIO_ACCESS_KEY: minioadmin  # Ключ доступа
      MINIO_SECRET_KEY: minioadmin  # Секретный ключ
      MINIO_BUCKET_NAME: bitrosh  # Имя бакета
    depends_on:
      - postgres-bitrosh
      - minio
    deploy:
      replicas: 3  # Запускаем 5 экземпляров приложения

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app

# Настройки сетей и томов
networks:
  default:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
